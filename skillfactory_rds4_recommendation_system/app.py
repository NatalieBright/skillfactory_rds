# -*- coding: utf-8 -*-
"""Подготовка модели.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1It3uV9CimsFd0hjHee4_D_miAXpACZsM
"""

import streamlit as st
import numpy as np
import pandas as pd
import lightfm as lf
import nmslib
import pickle
import scipy.sparse as sparse

def nearest_item_nms(item_id, index, n=5):
    nn = index.knnQuery(item_embeddings[item_id], k=n)
    return nn

def get_title(index):
    # return titles of the item with the index "index"
    # take: idx of books
    # return - list of titles
    titles = []
    for idx in index:
        titles.append(items[items['item_id'] == idx]['title'].values[0])
    return titles

def read_files(folder_name='data'):
    """
    Функция для чтения файлов + преобразование к  нижнему регистру
    """
    ratings = pd.read_csv(folder_name+'/train_pr1.csv')
    items = pd.read_csv(folder_name+'/items1.csv')
    return ratings, items 
	
def load_embeddings():
    """
    Функция для загрузки векторных представлений
    """
    with open('data/items_embeddings.pkl', 'rb') as f:
        item_embeddings = pickle.load(f)

    # Тут мы используем nmslib, чтобы создать наш быстрый knn
    nms_idx = nmslib.init(method='hnsw', space='cosinesimil')
    nms_idx.addDataPointBatch(item_embeddings)
    nms_idx.createIndex(print_progress=True)
    return item_embeddings,nms_idx



#Загружаем данные
ratings, items  = read_files(folder_name='data') 
item_embeddings,nms_idx = load_embeddings()

#Форма для ввода текста
itemid_for_reccomend = st.text_input('Goods name', '')
if not itemid_for_reccomend.isdigit():
    itemid_for_reccomend = 12345
    'You can start with ', itemid_for_reccomend, ' (0 - 41301)'
itemid_list = list(range(int(itemid_for_reccomend) - 5, int(itemid_for_reccomend) + 5))

#Наш поиск по товарам
output = items[items.item_id.isin(itemid_list)]

#Выбор товара из списка
option = st.selectbox('Which item?', output['title'].values)

#Выводим товар
'You selected: ', option

#Ищем рекомендации
val_index = output[output['title'].values == option].item_id
index = nearest_item_nms(val_index, nms_idx, 5)

#Выводим рекомендации к ней
'Most simmilar items are: '
st.write('', get_title(index[0])[1:])


